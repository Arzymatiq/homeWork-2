import React from "react";
import NavBar from "./components/NavBar";
import Footer from "./components/Footer";
import Marshroot from "./Marshroot";
import axios from "axios";

const App = () => {
    const API = "http://localhost:8000/products";

    function addProduct(newProduct) {
        axios.post(API, newProduct);
    }
    return (
        <>
            <NavBar />
            <Marshroot addProduct={addProduct} />
            <Footer />
        </>
    );
};

export default App;

// Общее описание задачи: Создать проект в котором будет реализован полный CRUD(create, read/retrieve, update, delete) для постов, у каждого поста есть: id, body, author, image, like; для навигации использовать react-router-dom, для отображения кнопок навигации-навбар бутстрапа, для вывода всех постов использовать карточки(также в каждой карточке будут свои кнопки, для изменения, удаления, детализации); также у каждого поста должна быть возможность поставить ему лайк(это будет отдельный компонент), если ставишь лайк сердечко должно быть закрашено, если нажимаешь еще раз, сердечко становится белым, ключ внутри объекта с постом также меняется

// Разделение на таски:
// 1. Создать проект, очистить его и установить все нужные зависимости(bootstrap, react-router-dom, axios)
// 2. Определить какие компоненты понадобятся для работы, создать их(пока внутри будет просто разметка) и наладить систему маршрутизации
// 3. Определить какие состояния будут являться глобальными(например список всех постов, чтобы в последующем можно было передать дочерним компонентам)
// 4. Работаем с компонентом добавления поста, реализовать логику сохранения поста в db.json
// 5. Реализовать отображение на странице всех постов в виде карточек, учесть, что если у поста ключ like - true, то сердечко у этого поста уже отображается как закрашенное
// 6. Реализовать логику удаления для каждого поста
// 7. Работаем над детализацией поста, при нажатии на кнопку детализации, переходить на соответствующий компонент
// 8. Реализовать возможность добавления лайка понравившемуся посту
// 9. Добавить компонент отвечающий за изменение поста(при переходе там уже должны лежать в инпутах предыдущие значения), по нажатию на кнопку СОХРАНИТЬ, пост должен обновляться и необходимо делать переадресацию на главную страницу со всеми постами
